name: Publish - NuGet and GitHub Packages

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags (after CI passes)
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.1.0)'
        required: true
        type: string
      publish_nuget:
        description: 'Publish to NuGet.org'
        required: true
        type: boolean
        default: true
      publish_github:
        description: 'Publish to GitHub Packages'
        required: true
        type: boolean
        default: true

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_PATH: 'src/Diiwo.Identity.csproj'

jobs:
  publish:
    name: Publish NuGet Packages
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Extract version
      id: get_version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "ðŸ“¦ Publishing version: $VERSION"

    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}

    - name: Build
      run: |
        dotnet build ${{ env.PROJECT_PATH }} \
          --configuration Release \
          --no-restore \
          /p:Version=${{ steps.get_version.outputs.version }}

    - name: Pack NuGet package
      run: |
        dotnet pack ${{ env.PROJECT_PATH }} \
          --configuration Release \
          --no-build \
          --output ./artifacts \
          /p:PackageVersion=${{ steps.get_version.outputs.version }}

    - name: Publish to NuGet.org
      if: |
        (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) ||
        (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_nuget == 'true')
      run: |
        echo "ðŸ“¤ Publishing to NuGet.org..."
        dotnet nuget push ./artifacts/*.nupkg \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

    - name: Publish to GitHub Packages
      if: |
        (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) ||
        (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_github == 'true')
      run: |
        echo "ðŸ“¤ Publishing to GitHub Packages..."
        dotnet nuget push ./artifacts/*.nupkg \
          --api-key ${{ secrets.GITHUB_TOKEN }} \
          --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
          --skip-duplicate
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package-${{ steps.get_version.outputs.version }}
        path: ./artifacts/*.nupkg
        retention-days: 90

    - name: Publication Summary
      run: |
        echo "## ðŸ“¦ Package Published Successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Version:** ${{ steps.get_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Published to:" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… **NuGet.org**: https://www.nuget.org/packages/Diiwo.Identity/${{ steps.get_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… **GitHub Packages**: https://github.com/${{ github.repository }}/packages" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Installation:" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "dotnet add package Diiwo.Identity --version ${{ steps.get_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### For GitHub Packages:" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "dotnet nuget add source https://nuget.pkg.github.com/Diiwo/index.json -n github" >> $GITHUB_STEP_SUMMARY
        echo "dotnet add package Diiwo.Identity --version ${{ steps.get_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
