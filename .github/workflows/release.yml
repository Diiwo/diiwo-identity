name: Release - Create GitHub Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v0.1.0
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag version to release (e.g., v0.1.0)'
        required: true
        type: string

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_PATH: 'src/Diiwo.Identity.csproj'

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Extract version from tag
      id: get_version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION=${{ github.event.inputs.tag }}
          VERSION=${VERSION#v}
        else
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=v$VERSION" >> $GITHUB_OUTPUT
        echo "Building version: $VERSION"

    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}

    - name: Build
      run: |
        dotnet build ${{ env.PROJECT_PATH }} \
          --configuration Release \
          --no-restore \
          /p:Version=${{ steps.get_version.outputs.version }}

    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal

    - name: Pack NuGet package
      run: |
        dotnet pack ${{ env.PROJECT_PATH }} \
          --configuration Release \
          --no-build \
          --output ./artifacts \
          /p:PackageVersion=${{ steps.get_version.outputs.version }}

    - name: Generate changelog
      id: changelog
      run: |
        PREVIOUS_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "")

        if [ -z "$PREVIOUS_TAG" ]; then
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "## Initial Release" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "First public release of Diiwo.Identity" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.tag }}
        name: Release ${{ steps.get_version.outputs.tag }}
        body: |
          ## Diiwo.Identity ${{ steps.get_version.outputs.version }}

          ### Changes
          ${{ steps.changelog.outputs.changelog }}

          ### Installation

          ```bash
          dotnet add package Diiwo.Identity --version ${{ steps.get_version.outputs.version }}
          ```

          ### NuGet Packages
          - [NuGet.org](https://www.nuget.org/packages/Diiwo.Identity/${{ steps.get_version.outputs.version }})
          - [GitHub Packages](https://github.com/Diiwo/diiwo-identity/packages)

          ### Documentation
          - [README](https://github.com/Diiwo/diiwo-identity#readme)
          - [Examples](https://github.com/Diiwo/diiwo-identity/tree/main/examples)
        files: ./artifacts/*.nupkg
        draft: false
        prerelease: ${{ contains(steps.get_version.outputs.version, '-') }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package-${{ steps.get_version.outputs.version }}
        path: ./artifacts/*.nupkg
        retention-days: 90
